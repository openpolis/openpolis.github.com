<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Openpolis Lab</title><link href="http://lab.openpolis.it/" rel="alternate"></link><link href="http://lab.openpolis.it/feeds/howto.atom.xml" rel="self"></link><id>http://lab.openpolis.it/</id><updated>2013-12-09T10:45:00+01:00</updated><entry><title>Writeable Foreign keys in Django Rest Framework</title><link href="http://lab.openpolis.it/writeable-foreign-keys-in-django-rest-framework.html" rel="alternate"></link><updated>2013-12-09T10:45:00+01:00</updated><author><name>guglielmo</name></author><id>tag:lab.openpolis.it,2013-12-09:writeable-foreign-keys-in-django-rest-framework.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://django-rest-framework.org/"&gt;Django Rest Framework&lt;/a&gt; is a django-based framework to produce browseable&amp;nbsp;APIs.&lt;/p&gt;
&lt;p&gt;The documentation and the tutorial are pretty much clear, but implementing a writeable &lt;span class="caps"&gt;API&lt;/span&gt;
for related fields can be&amp;nbsp;tricky.&lt;/p&gt;
&lt;p&gt;RelatedField is read-only.
PrimaryKeyRelatedFields, HyperlinkedRelatedField, SlugRelatedField, can be used as writeable, but the
related items must already exist. It seems they&amp;#8217;re more appropriate to handle aggregation relations (i.e. User and&amp;nbsp;Groups)&lt;/p&gt;
&lt;p&gt;Nested relationships can be used to handle composition relations (i.e. a Place and its Acronyms).
The quirk is that the get_identity() method must be re-written in the nested serializer, because the default one uses
the id field to determine the identity of the&amp;nbsp;items.&lt;/p&gt;
&lt;p&gt;A working example with Places and Acronyms can be found &lt;a class="reference external" href="http://gist.github.com/guglielmo/7851650"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Given a Place instance with just one acronym, the &lt;span class="caps"&gt;JSON&lt;/span&gt; representation would&amp;nbsp;be:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{
    &amp;quot;_self&amp;quot;: &amp;quot;http://localhost:8003/maps/places/roma-comune&amp;quot;,
    &amp;quot;slug&amp;quot;: &amp;quot;roma-comune&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;Roma&amp;quot;,
    &amp;quot;acronyms&amp;quot;: [
        &amp;quot;RM&amp;quot;
    ]
}
&lt;/pre&gt;
&lt;p&gt;PUTting the following json payload to the&amp;nbsp;resource:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{
    &amp;quot;slug&amp;quot;: &amp;quot;roma-comune&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;Roma&amp;quot;,
    &amp;quot;acronyms&amp;quot;: [
        &amp;quot;RM&amp;quot;, &amp;quot;ROM&amp;quot;
    ]
}
&lt;/pre&gt;
&lt;p&gt;or PATCHing the even shorter&amp;nbsp;one:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{
    &amp;quot;acronyms&amp;quot;: [
        &amp;quot;RM&amp;quot;, &amp;quot;ROM&amp;quot;
    ]
}
&lt;/pre&gt;
&lt;p&gt;The final result would be that the &lt;strong&gt;&lt;span class="caps"&gt;ROM&lt;/span&gt;&lt;/strong&gt; acronym would be added to the Place&amp;nbsp;resource.&lt;/p&gt;
</summary><category term="python"></category><category term="django"></category><category term="django-rest-framework"></category><category term="API"></category></entry><entry><title>Using Mapnik inside a virtualenv on OSX</title><link href="http://lab.openpolis.it/using-mapnik-inside-a-virtualenv-on-osx.html" rel="alternate"></link><updated>2013-10-20T10:30:00+02:00</updated><author><name>guglielmo</name></author><id>tag:lab.openpolis.it,2013-10-20:using-mapnik-inside-a-virtualenv-on-osx.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/mapnik/mapnik/wiki/Mapnik2"&gt;Mapnik&lt;/a&gt; is a tool to produce maps out of gis&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Since installation in a virtualenv through &lt;tt class="docutils literal"&gt;pip install mapnik2&lt;/tt&gt; fails, due to compilation
problems (boost library cannot be located correctly), the following workaround can be&amp;nbsp;used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Install Mapnik through&amp;nbsp;macports:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo port install mapnik &amp;#64;2.2.0_0+python27
&lt;/pre&gt;
&lt;p&gt;This will install both the libraries and the python bindings, as global packages&amp;nbsp;in:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Link mapnik directories into the virtualenv&amp;#8217;s site_package&amp;nbsp;directory:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
workon &amp;lt;virtualenv&amp;gt;
cdsitepackages
ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mapnik .
ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mapnik2 .
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="python"></category><category term="osx"></category><category term="macports"></category></entry><entry><title>Using Tkinter inside a virtualenv</title><link href="http://lab.openpolis.it/using-tkinter-inside-a-virtualenv.html" rel="alternate"></link><updated>2013-10-19T10:30:00+02:00</updated><author><name>guglielmo</name></author><id>tag:lab.openpolis.it,2013-10-19:using-tkinter-inside-a-virtualenv.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://wiki.python.org/moin/TkInter"&gt;Tkinter&lt;/a&gt; is usually installed on &lt;span class="caps"&gt;OSX&lt;/span&gt; trhough &lt;a class="reference external" href="http://www.macports.org/"&gt;macports&lt;/a&gt; as a global&amp;nbsp;package:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo port install py27-tkinter
&lt;/pre&gt;
&lt;p&gt;Within a virtualenv the package will not be imported, as global packages are not included by&amp;nbsp;default:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; import Tkinter
Traceback (most recent call last):
  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
  File &amp;quot;/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk/Tkinter.py&amp;quot;, line 39, in &amp;lt;module&amp;gt;
    import _tkinter # If this fails your Python may not be configured for Tk
ImportError: No module named _tkinter
&lt;/pre&gt;
&lt;p&gt;The package consists of a single library (_tkinter.so) that can be &lt;em&gt;installed&lt;/em&gt; in the virtual environment,
just by symlinking it into the virtualenv&amp;#8217;s site_package&amp;nbsp;directory:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
workon &amp;lt;virtualenv&amp;gt;
cdsitepackages
ln -s /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/_tkinter.so .
&lt;/pre&gt;
&lt;p&gt;Yes, it&amp;#8217;s kind of an hack, but it&amp;nbsp;works.&lt;/p&gt;
</summary><category term="python"></category><category term="osx"></category><category term="macports"></category></entry><entry><title>Fixing the “can’t start the AWT” bug for Tomcat6</title><link href="http://lab.openpolis.it/fixing-the-cant-start-the-awt-bug-for-tomcat6.html" rel="alternate"></link><updated>2013-06-25T14:30:00+02:00</updated><author><name>guglielmo</name></author><id>tag:lab.openpolis.it,2013-06-25:fixing-the-cant-start-the-awt-bug-for-tomcat6.html</id><summary type="html">&lt;p&gt;After a Java upgrade on the &lt;span class="caps"&gt;OSX&lt;/span&gt;, Tomcat6 is not starting properly. The log shows a Java&amp;nbsp;error:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
2013-06-27 14:45:40.300 jsvc[57146:203] Apple AWT Java VM was loaded on first thread -- can't start AWT.
Jun 27, 2013 2:45:40 PM org.apache.catalina.startup.Bootstrap initClassLoaders
SEVERE: Class loader creation threw exception
java.lang.InternalError: Can't start the AWT because Java was started on the first thread.  Make sure StartOnFirstThread is not specified in your application's Info.plist ...
&lt;/pre&gt;
&lt;p&gt;To have it properly start through &lt;tt class="docutils literal"&gt;tomcatctl&lt;/tt&gt;, you need to add the &lt;tt class="docutils literal"&gt;awt.headless&lt;/tt&gt; option to &lt;tt class="docutils literal"&gt;JAVA_OPTS&lt;/tt&gt;.
This can be done, by modifying the &lt;tt class="docutils literal"&gt;/opt/local/share/java/tomcat6/conf/setenv.local&lt;/tt&gt; file,
and appending this line to&amp;nbsp;it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
export JAVA_OPTS=&amp;quot;$JAVA_OPTS -Djava.awt.headless=true&amp;quot;
&lt;/pre&gt;
</summary><category term="tomcat6"></category><category term="java"></category><category term="macports"></category><category term="osx"></category></entry><entry><title>How to configure bash completion in ubuntu</title><link href="http://lab.openpolis.it/how-to-configure-bash-completion-in-ubuntu.html" rel="alternate"></link><updated>2013-04-11T16:30:00+02:00</updated><author><name>guglielmo</name></author><id>tag:lab.openpolis.it,2013-04-11:how-to-configure-bash-completion-in-ubuntu.html</id><summary type="html">&lt;p&gt;Working almost always in the terminal of a linux box, the &lt;em&gt;autocompletion&lt;/em&gt; feature enhances your speed and comfort, a&amp;nbsp;lot.&lt;/p&gt;
&lt;p&gt;Under Ubuntu, autocompletion is installable, if not already installed,&amp;nbsp;with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
apt-get install bash_completion
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; config file should contain these&amp;nbsp;lines:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
if [ -f /etc/bash_completion ] &amp;amp;&amp;amp; ! shopt -oq posix; then
    . /etc/bash_completion
fi
&lt;/pre&gt;
&lt;p&gt;If things are set this way, then you will be able to autocomplete regularly (and save a lot of&amp;nbsp;time).&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Note:&lt;/dt&gt;
&lt;dd&gt;In &lt;tt class="docutils literal"&gt;/etc/bash_completion.d&lt;/tt&gt; you can find the rather cryptic scripts enabling autocomplete patterns inside various unix&amp;nbsp;contexts.&lt;/dd&gt;
&lt;/dl&gt;
</summary><category term="bash"></category><category term="terminal"></category></entry><entry><title>How to install solr on tomcat7, over Ubuntu 12.04</title><link href="http://lab.openpolis.it/how-to-install-solr-on-tomcat7-over-ubuntu-1204.html" rel="alternate"></link><updated>2013-04-10T15:30:00+02:00</updated><author><name>guglielmo</name></author><id>tag:lab.openpolis.it,2013-04-10:how-to-install-solr-on-tomcat7-over-ubuntu-1204.html</id><summary type="html">&lt;div class="section" id="tomcat7"&gt;
&lt;h2&gt;Tomcat7&lt;/h2&gt;
&lt;p&gt;Ubuntu 12.04 comes with &lt;a class="reference external" href="http://tomcat.apache.org/"&gt;tomcat&lt;/a&gt; easily installable as a package (you need&amp;nbsp;jdk):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
apt-get install default-jdk tomcat7 tomcat7-admin tomcat7-user tomcat7-docs
&lt;/pre&gt;
&lt;p&gt;Configure access to the web-admin in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/tomcat7/tomcat-users.xml&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;tomcat-users&amp;gt;
  &amp;lt;role rolename=&amp;quot;manager-gui&amp;quot;/&amp;gt;
  &amp;lt;user username=&amp;quot;manager&amp;quot; password=&amp;quot;S3krEt&amp;quot; roles=&amp;quot;manager-gui&amp;quot;/&amp;gt;
&amp;lt;/tomcat-users&amp;gt;
&lt;/pre&gt;
&lt;p&gt;The tomcat management console is now accessible, through authentication at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://&lt;span class="caps"&gt;HOST&lt;/span&gt;:8080/manager/html&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Please, do change username and password in your &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;tomcat-users.xml&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="solr"&gt;
&lt;h2&gt;Solr&lt;/h2&gt;
&lt;p&gt;It can be useful to have different, isolated instances of &lt;a class="reference external" href="http://lucene.apache.org/solr/"&gt;solr&lt;/a&gt; running, corresponding to different solr versions
(i.e. 1.2, 1.4,  3.4, &amp;#8230;). One of the instances could be a &lt;em&gt;multicore&lt;/em&gt; solr instance, able to host multiple indexes under a single&amp;nbsp;app.&lt;/p&gt;
&lt;p&gt;This is possible by creating different &lt;strong&gt;contexts&lt;/strong&gt; inside &lt;tt class="docutils literal"&gt;/etc/tomcat7/Catalina/localhost/&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;open_parlamento.xml&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;Context docBase=&amp;quot;/home/solr/open_parlamento/apache-solr-1.4.0.war&amp;quot; debug=&amp;quot;0&amp;quot; crossContext=&amp;quot;true&amp;quot; &amp;gt;
   &amp;lt;Environment name=&amp;quot;solr/home&amp;quot; type=&amp;quot;java.lang.String&amp;quot; value=&amp;quot;/home/solr/open_parlamento&amp;quot; override=&amp;quot;true&amp;quot; /&amp;gt;
&amp;lt;/Context&amp;gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;open_politici.xml&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;Context docBase=&amp;quot;/home/solr/open_politici/apache-solr-1.2.0.war&amp;quot; debug=&amp;quot;0&amp;quot; crossContext=&amp;quot;true&amp;quot; &amp;gt;
   &amp;lt;Environment name=&amp;quot;solr/home&amp;quot; type=&amp;quot;java.lang.String&amp;quot; value=&amp;quot;/home/solr/open_politici&amp;quot; override=&amp;quot;true&amp;quot; /&amp;gt;
&amp;lt;/Context&amp;gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;multicore.xml&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;Context docBase=&amp;quot;/home/solr/multicore/apache-solr-3.4.0.war&amp;quot; debug=&amp;quot;0&amp;quot; crossContext=&amp;quot;true&amp;quot; &amp;gt;
   &amp;lt;Environment name=&amp;quot;solr/home&amp;quot; type=&amp;quot;java.lang.String&amp;quot; value=&amp;quot;/home/solr/multicore/cores&amp;quot; override=&amp;quot;true&amp;quot; /&amp;gt;
&amp;lt;/Context&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Create this directory&amp;nbsp;tree:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/home/solr
|- open_parlamento
|  |- apache-solr-1.4.0.war
|  |- data
|  |  |- index
|  |  |  |- ...
|  |- conf
|     |- admin-extra.html
|     |- elevate.xml
|     |- italian-stopwords.txt
|     |- mapping-ISOLatin1Accent.txt
|     |- protwords.txt
|     |- schema.xml
|     |- scripts.conf
|     |- solrconfig.xml
|     |- spellings.txt
|     |- stopwords.txt
|     |- synonyms.txt
|- open_polis
|  |- apache-solr-1.2.0.war
|  |- ...
|- multicore
   |- apache-solr.3.4.0.war
   |- cores
   |  |- solr.xml
   |  |- app1
   |  |  |- conf
   |  |- app2
   |  |  |- conf
   |- data
      |- app1
      |  |- index
      |- app2
         |- index
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Note:&lt;/dt&gt;
&lt;dd&gt;You need to download the different versions of the solr war from their web site, and you may eventually need to
download libraries, as pointed in the &lt;tt class="docutils literal"&gt;solrconfig.xml&lt;/tt&gt; file to handle advanced tasks, so &lt;em&gt;your mileage may vary&lt;/em&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;strong&gt;solr.xml&lt;/strong&gt; is the configuration file that points to the various cores in the multicore&amp;nbsp;instance:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;solr persistent=&amp;quot;false&amp;quot; sharedLib=&amp;quot;lib&amp;quot;&amp;gt;
  &amp;lt;cores adminPath=&amp;quot;/admin/cores&amp;quot; shareSchema=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;core name=&amp;quot;app1&amp;quot;  instanceDir=&amp;quot;app1&amp;quot;  dataDir=&amp;quot;${solr.data.dir:../data}/app1&amp;quot; /&amp;gt;
    &amp;lt;core name=&amp;quot;app2&amp;quot;  instanceDir=&amp;quot;app2&amp;quot;  dataDir=&amp;quot;${solr.data.dir:../data}/app2&amp;quot; /&amp;gt;
  &amp;lt;/cores&amp;gt;
&amp;lt;/solr&amp;gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;conf&lt;/tt&gt; directories in &lt;tt class="docutils literal"&gt;cores/appX&lt;/tt&gt; are standard solr conf directories, with all files needed, according to
the solr&amp;nbsp;version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="permissions"&gt;
&lt;h2&gt;Permissions&lt;/h2&gt;
&lt;p&gt;Tomcat is run by the &lt;tt class="docutils literal"&gt;tomcat7&lt;/tt&gt; user, so all the &lt;tt class="docutils literal"&gt;data&lt;/tt&gt; directories need to be writeable to this&amp;nbsp;user:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
chgrp -R tomcat7 /home/solr/open_parlamento/data
chmod -R g+w /home/solr/open_parlamento/data
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="restart"&gt;
&lt;h2&gt;Restart&lt;/h2&gt;
&lt;p&gt;Is needed whenever a tomcat or solr configuration changes. Under&amp;nbsp;ubuntu:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
service tomcat7 restart
&lt;/pre&gt;
&lt;p&gt;The applications are visible under &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://&lt;span class="caps"&gt;HOST&lt;/span&gt;:8080/APP_NAME&lt;/span&gt;&lt;/tt&gt; where &lt;tt class="docutils literal"&gt;APP_NAME&lt;/tt&gt; is the name of the context file (&lt;tt class="docutils literal"&gt;open_parlamento&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;open_politici&lt;/tt&gt;) or the name of the core (app1,&amp;nbsp;app2).&lt;/p&gt;
&lt;/div&gt;
</summary><category term="solr"></category><category term="tomcat"></category><category term="ubuntu"></category></entry></feed>